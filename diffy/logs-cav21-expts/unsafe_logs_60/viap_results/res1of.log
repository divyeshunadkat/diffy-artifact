int
int
int
Program Body
{
  int N_var;
  int RET;
  RET = 0;
  int _1_PROVE = 0;
  N_var = __VERIFIER_nondet_int();
  if (N_var <= 0)
  {
    RET = 1;
  }

  if (N_var > 0)
  {
    int i;
    int sum[1];
    int a[N_var];
    int b[N_var];
    sum[0] = 0;
    i = 0;
    while (i < N_var)
    {
      a[i] = 1;
      i = i + 1;
    }

    i = 0;
    while (i < N_var)
    {
      sum[0] = sum[0] + a[i];
      i = i + 1;
    }

    i = 0;
    while (i < N_var)
    {
      b[i] = 1;
      i = i + 1;
    }

    i = 0;
    while (i < N_var)
    {
      sum[0] = sum[0] + b[i];
      i = i + 1;
    }

    _1_PROVE = sum[0] <= N_var;
    RET = 1;
  }

}

Function Name:
main
Return Type:
int
Input Variables:
{}
Local Variables:
{ a:array b:array i:int sum:array _1_PROVE:int RET:int N_var:int}

Output in normal notation:
1. Frame axioms:
a1 = a
sum1 = sum
b1 = b

2. Output equations:
i1 = ite((__VERIFIER_nondet_int2>0),(_N4+0),i)
N_var1 = __VERIFIER_nondet_int2
d1array1(_x1,_x2) = ite((__VERIFIER_nondet_int2>0),d1array9(_x1,_x2,_N4),d1array(_x1,_x2))
main = ite((__VERIFIER_nondet_int2>0),1,ite((__VERIFIER_nondet_int2<=0),1,0))

3. Other axioms:
d1array3(_x1,_x2,(_n1+1)) = ite(((_x1=a) and (_x2=(_n1+0))),1,d1array3(_x1,_x2,_n1))
d1array3(_x1,_x2,0) = ite(((_x1=sum) and (_x2=0)),0,d1array(_x1,_x2))
(_N1>=(__VERIFIER_nondet_int2-0))
(_n1<_N1) -> ((_n1+0)<__VERIFIER_nondet_int2)
d1array5(_x1,_x2,(_n2+1)) = ite(((_x1=sum) and (_x2=0)),(d1array5(sum,0,_n2)+d1array5(a,(_n2+0),_n2)),d1array5(_x1,_x2,_n2))
d1array5(_x1,_x2,0) = d1array3(_x1,_x2,_N1)
(_N2>=(__VERIFIER_nondet_int2-0))
(_n2<_N2) -> ((_n2+0)<__VERIFIER_nondet_int2)
d1array7(_x1,_x2,(_n3+1)) = ite(((_x1=b) and (_x2=(_n3+0))),1,d1array7(_x1,_x2,_n3))
d1array7(_x1,_x2,0) = d1array5(_x1,_x2,_N2)
(_N3>=(__VERIFIER_nondet_int2-0))
(_n3<_N3) -> ((_n3+0)<__VERIFIER_nondet_int2)
d1array9(_x1,_x2,(_n4+1)) = ite(((_x1=sum) and (_x2=0)),(d1array9(sum,0,_n4)+d1array9(b,(_n4+0),_n4)),d1array9(_x1,_x2,_n4))
d1array9(_x1,_x2,0) = d1array7(_x1,_x2,_N3)
(_N4>=(__VERIFIER_nondet_int2-0))
(_n4<_N4) -> ((_n4+0)<__VERIFIER_nondet_int2)

4. Assumption :

5. Assertion :
ite((__VERIFIER_nondet_int2>0),(d1array9(sum,0,_N4)<=__VERIFIER_nondet_int2),0)
VIAP_STANDARD_OUTPUT_False
FINISHED CPU 14.90 MEM 0 MAXMEM 193116 STALE 0
<time name="ALL">14750</time>
