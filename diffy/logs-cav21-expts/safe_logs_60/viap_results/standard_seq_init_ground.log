int
Program Body
{
  int SIZE;
  int RET;
  RET = 0;
  int _1_PROVE[1000000];
  SIZE = __VERIFIER_nondet_int();
  int a[SIZE];
  int i;
  a[0] = 7;
  i = 1;
  while (i < SIZE)
  {
    a[i] = a[i - 1] + 1;
    i = i + 1;
  }

  int x;
  x = 1;
  while (x < SIZE)
  {
    _1_PROVE[x] = a[x] >= a[x - 1];
    x = x + 1;
  }

  RET = 0;
}

Function Name:
main
Return Type:
int
Input Variables:
{}
Local Variables:
{ a:array i:int _1_PROVE:array RET:int x:int SIZE:int}


Output in normal notation:
1. Frame axioms:
a1 = a

2. Output equations:
i1 = (_N1+1)
x1 = (_N2+1)
d1array1(_x1,_x2) = d1array4(_x1,_x2,_N2)
main = 0
SIZE1 = __VERIFIER_nondet_int2

3. Other axioms:
d1array2(_x1,_x2,(_n1+1)) = ite(((_x1=a) and (_x2=(_n1+1))),(d1array2(a,((_n1+1)-1),_n1)+1),d1array2(_x1,_x2,_n1))
d1array2(_x1,_x2,0) = ite(((_x1=a) and (_x2=0)),7,d1array(_x1,_x2))
(_N1>=(__VERIFIER_nondet_int2-1))
(_n1<_N1) -> ((_n1+1)<__VERIFIER_nondet_int2)
d1array4(_x1,_x2,(_n2+1)) = d1array4(_x1,_x2,_n2)
d1array4(_x1,_x2,0) = d1array2(_x1,_x2,_N1)
(_N2>=(__VERIFIER_nondet_int2-1))
(_n2<_N2) -> ((_n2+1)<__VERIFIER_nondet_int2)

4. Assumption :

5. Assertion :
(d1array4(a,(_n2+1),_N2)>=d1array4(a,((_n2+1)-1),_N2))
Strategy applied A-1
Successfully Proved
VIAP_STANDARD_OUTPUT_True
FINISHED CPU 20.12 MEM 338832 MAXMEM 416052 STALE 0
<time name="ALL">19640</time>
