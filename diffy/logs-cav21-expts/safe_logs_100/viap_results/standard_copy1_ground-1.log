int
int
Program Body
{
  int N_var;
  int RET;
  RET = 0;
  int _1_PROVE[1000000];
  N_var = __VERIFIER_nondet_int();
  int a1_var[N_var];
  int a2_var[N_var];
  int a;
  a = 0;
  while (a < N_var)
  {
    a1_var[a] = __VERIFIER_nondet_int();
    a = a + 1;
  }

  int i;
  i = 0;
  while (i < N_var)
  {
    a2_var[i] = a1_var[i];
    i = i + 1;
  }

  int x;
  x = 0;
  while (x < N_var)
  {
    _1_PROVE[x] = a1_var[x] == a2_var[x];
    x = x + 1;
  }

  RET = 0;
}

Function Name:
main
Return Type:
int
Input Variables:
{}
Local Variables:
{ a:int a1_var:array i:int _1_PROVE:array RET:int a2_var:array x:int N_var:int}


Output in normal notation:
1. Frame axioms:
a2_var1 = a2_var
a1_var1 = a1_var

2. Output equations:
a1 = (_N1+0)
i1 = (_N2+0)
d1array1(_x1,_x2) = d1array6(_x1,_x2,_N3)
main = 0
x1 = (_N3+0)
N_var1 = __VERIFIER_nondet_int2

3. Other axioms:
d1array2(_x1,_x2,(_n1+1)) = ite(((_x1=a1_var) and (_x2=(_n1+0))),__VERIFIER_nondet_int3(_n1),d1array2(_x1,_x2,_n1))
d1array2(_x1,_x2,0) = d1array(_x1,_x2)
(_N1>=(__VERIFIER_nondet_int2-0))
(_n1<_N1) -> ((_n1+0)<__VERIFIER_nondet_int2)
d1array4(_x1,_x2,(_n2+1)) = ite(((_x1=a2_var) and (_x2=(_n2+0))),d1array4(a1_var,(_n2+0),_n2),d1array4(_x1,_x2,_n2))
d1array4(_x1,_x2,0) = d1array2(_x1,_x2,_N1)
(_N2>=(__VERIFIER_nondet_int2-0))
(_n2<_N2) -> ((_n2+0)<__VERIFIER_nondet_int2)
d1array6(_x1,_x2,(_n3+1)) = d1array6(_x1,_x2,_n3)
d1array6(_x1,_x2,0) = d1array4(_x1,_x2,_N2)
(_N3>=(__VERIFIER_nondet_int2-0))
(_n3<_N3) -> ((_n3+0)<__VERIFIER_nondet_int2)

4. Assumption :

5. Assertion :
(d1array6(a1_var,(_n3+0),_N3)==d1array6(a2_var,(_n3+0),_N3))
Strategy applied A-1
Successfully Proved
VIAP_STANDARD_OUTPUT_True
FINISHED CPU 15.09 MEM 350716 MAXMEM 423932 STALE 0
<time name="ALL">14570</time>
