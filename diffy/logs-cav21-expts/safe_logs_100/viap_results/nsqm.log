int
int
Program Body
{
  int N_var;
  int RET;
  RET = 0;
  int _1_PROVE[1000000];
  N_var = __VERIFIER_nondet_int();
  if (N_var <= 0)
  {
    RET = 1;
  }

  if (N_var > 0)
  {
    int i;
    int a[N_var];
    int b[N_var];
    b[0] = 1;
    a[0] = N_var + 1;
    i = 1;
    while (i < N_var)
    {
      b[i] = b[i - 1] + 2;
      i = i + 1;
    }

    i = 1;
    while (i < N_var)
    {
      a[i] = (a[i - 1] + b[i - 1]) + 2;
      i = i + 1;
    }

    i = 0;
    while (i < N_var)
    {
      _1_PROVE[i] = a[i] == (N_var + ((i + 1) * (i + 1)));
      i = i + 1;
    }

    RET = 1;
  }

}

Function Name:
main
Return Type:
int
Input Variables:
{}
Local Variables:
{ a:array b:array i:int _1_PROVE:array RET:int N_var:int}


Output in normal notation:
1. Frame axioms:
a1 = a
b1 = b

2. Output equations:
i1 = ite((__VERIFIER_nondet_int2>0),(_N3+0),i)
N_var1 = __VERIFIER_nondet_int2
d1array1(_x1,_x2) = ite((__VERIFIER_nondet_int2>0),d1array7(_x1,_x2,_N3),d1array(_x1,_x2))
main = ite((__VERIFIER_nondet_int2>0),1,ite((__VERIFIER_nondet_int2<=0),1,0))

3. Other axioms:
d1array3(_x1,_x2,(_n1+1)) = ite(((_x1=b) and (_x2=(_n1+1))),(d1array3(b,((_n1+1)-1),_n1)+2),d1array3(_x1,_x2,_n1))
d1array3(_x1,_x2,0) = ite(((_x1=a) and (_x2=0)),(__VERIFIER_nondet_int2+1),ite(((_x1=b) and (_x2=0)),1,d1array(_x1,_x2)))
(_N1>=(__VERIFIER_nondet_int2-1))
(_n1<_N1) -> ((_n1+1)<__VERIFIER_nondet_int2)
d1array5(_x1,_x2,(_n2+1)) = ite(((_x1=a) and (_x2=(_n2+1))),((d1array5(a,((_n2+1)-1),_n2)+d1array5(b,((_n2+1)-1),_n2))+2),d1array5(_x1,_x2,_n2))
d1array5(_x1,_x2,0) = d1array3(_x1,_x2,_N1)
(_N2>=(__VERIFIER_nondet_int2-1))
(_n2<_N2) -> ((_n2+1)<__VERIFIER_nondet_int2)
d1array7(_x1,_x2,(_n3+1)) = d1array7(_x1,_x2,_n3)
d1array7(_x1,_x2,0) = d1array5(_x1,_x2,_N2)
(_N3>=(__VERIFIER_nondet_int2-0))
(_n3<_N3) -> ((_n3+0)<__VERIFIER_nondet_int2)

4. Assumption :

5. Assertion :
(__VERIFIER_nondet_int2>0) -> (d1array7(a,(_n3+0),_N3)==(__VERIFIER_nondet_int2+(((_n3+0)+1)*((_n3+0)+1))))
Strategy applied A-1
Failed to Prove
Strategy applied A-2
Traceback (most recent call last):
  File "/home/divyesh/Tools/viap/viap_tool.py", line 18, in <module>
    viap_svcomp.prove_auto(filename,propertyfile)
  File "/home/divyesh/Tools/viap/viap_svcomp.py", line 25438, in prove_auto
    prove_auto_process(program,property,program_analysis3,program_analysis_decl)
  File "/home/divyesh/Tools/viap/viap_svcomp.py", line 8082, in prove_auto_process
    status=prove_assert_tactic4_update1(axiom,witnessXml)
  File "/home/divyesh/Tools/viap/viap_svcomp.py", line 13820, in prove_assert_tactic4_update1
    array_fun_map_temp[e_array]=expr_update_iter(new_e1[4],array_fun_map)
  File "/home/divyesh/Tools/viap/viap_svcomp.py", line 16828, in expr_update_iter
    return expr_update_term(copy.deepcopy(e1),parameter)
  File "/home/divyesh/Tools/viap/viap_svcomp.py", line 16839, in expr_update_term
    if '_x' not in parameter[count-1][0]:
IndexError: list index out of range
FINISHED CPU 63.90 MEM 178864 MAXMEM 495636 STALE 1
<time name="ALL">62900</time>
